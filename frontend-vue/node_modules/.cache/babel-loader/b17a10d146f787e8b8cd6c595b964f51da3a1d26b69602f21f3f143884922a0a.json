{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, withModifiers as _withModifiers, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"row justify-content-center\"\n};\nconst _hoisted_2 = {\n  class: \"col-xl-10 col-lg-12 col-md-9\"\n};\nconst _hoisted_3 = {\n  class: \"card mt-5\"\n};\nconst _hoisted_4 = {\n  class: \"card-body p-0\"\n};\nconst _hoisted_5 = {\n  class: \"row\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"col-lg-6 bg-login-image\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_7 = {\n  class: \"col-lg-6\"\n};\nconst _hoisted_8 = {\n  class: \"p-5\"\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"text-center\"\n}, [/*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"h4 mb-4\"\n}, \"Welcome Back!\")], -1 /* HOISTED */);\nconst _hoisted_10 = {\n  class: \"form-group\"\n};\nconst _hoisted_11 = {\n  class: \"form-group\"\n};\nconst _hoisted_12 = /*#__PURE__*/_createStaticVNode(\"<button class=\\\"btn btn-primary btn-user w-100 mb-3\\\"> Login </button><hr><a href=\\\"http://localhost:8000/oauth2/authorization/google\\\" class=\\\"btn btn-google btn-user w-100 mb-2\\\"><i class=\\\"fab fa-google fa-fw\\\"></i> Login with Google </a><a href=\\\"http://localhost:8000/oauth2/authorization/naver\\\" class=\\\"btn btn-naver btn-user w-100 mb-2\\\"><i class=\\\"fa-solid fa-n\\\"></i> Login with Naver </a><a href=\\\"/\\\" class=\\\"btn btn-kakao btn-user w-100 mb-3\\\"><i class=\\\"fa-solid fa-k\\\"></i> Login with Kakao </a>\", 5);\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */);\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"text-center\"\n}, [/*#__PURE__*/_createElementVNode(\"a\", {\n  class: \"small\",\n  href: \"/forgot-password\"\n}, \" Forgot Password? \")], -1 /* HOISTED */);\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"text-center\"\n}, [/*#__PURE__*/_createElementVNode(\"a\", {\n  class: \"small\",\n  href: \"/register\"\n}, \" Create an Account! \")], -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createCommentVNode(\" {/* Nested Row within Card Body */} \"), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _createElementVNode(\"form\", {\n    class: \"user\",\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.login && $options.login(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_10, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    class: \"form-control form-control-user mb-3\",\n    placeholder: \"이메일을 넣기\",\n    name: \"email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.user.email = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.user.email]])]), _createElementVNode(\"div\", _hoisted_11, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    class: \"form-control form-control-user mb-3\",\n    placeholder: \"패스워드 넣기\",\n    name: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.user.password = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.user.password]])]), _hoisted_12], 32 /* NEED_HYDRATION */), _hoisted_17, _hoisted_18, _hoisted_19])])])])])])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createStaticVNode","href","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_createCommentVNode","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","onSubmit","_cache","_withModifiers","args","$options","login","_hoisted_10","type","placeholder","name","$event","$data","user","email","_hoisted_11","password","_hoisted_12","_hoisted_17","_hoisted_18","_hoisted_19"],"sources":["/Users/kangtaegyung/GitHub/social-login-multiple-providers/frontend-vue/src/views/auth/LoginView.vue"],"sourcesContent":["<!-- 사용법 : @submit.prevent=\"함수\" -->\r\n<!--       prevent : submit 의 기본 속성을 막기(다른 곳으로 이동하려는 특징)  -->\r\n\r\n<template>\r\n  <div>\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-xl-10 col-lg-12 col-md-9\">\r\n        <div class=\"card mt-5\">\r\n          <div class=\"card-body p-0\">\r\n            <!-- {/* Nested Row within Card Body */} -->\r\n            <div class=\"row\">\r\n              <div class=\"col-lg-6 bg-login-image\"></div>\r\n              <div class=\"col-lg-6\">\r\n                <div class=\"p-5\">\r\n                  <div class=\"text-center\">\r\n                    <h1 class=\"h4 mb-4\">Welcome Back!</h1>\r\n                  </div>\r\n                  <form class=\"user\" @submit.prevent=\"login\">\r\n                    <div class=\"form-group\">\r\n                      <input\r\n                        type=\"email\"\r\n                        class=\"form-control form-control-user mb-3\"\r\n                        placeholder=\"이메일을 넣기\"\r\n                        name=\"email\"\r\n                        v-model=\"user.email\"\r\n                      />\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                      <input\r\n                        type=\"password\"\r\n                        class=\"form-control form-control-user mb-3\"\r\n                        placeholder=\"패스워드 넣기\"\r\n                        name=\"password\"\r\n                        v-model=\"user.password\"\r\n                      />\r\n                    </div>\r\n\r\n                    <button class=\"btn btn-primary btn-user w-100 mb-3\">\r\n                      Login\r\n                    </button>\r\n                    <hr />\r\n                    <a\r\n                      href=\"http://localhost:8000/oauth2/authorization/google\"\r\n                      class=\"btn btn-google btn-user w-100 mb-2\"\r\n                    >\r\n                      <i class=\"fab fa-google fa-fw\"></i>&nbsp;Login with Google\r\n                    </a>\r\n                    <a href=\"http://localhost:8000/oauth2/authorization/naver\" class=\"btn btn-naver btn-user w-100 mb-2\">\r\n                      <i class=\"fa-solid fa-n\"></i>&nbsp;Login with Naver\r\n                    </a>\r\n                    <a href=\"/\" class=\"btn btn-kakao btn-user w-100 mb-3\">\r\n                      <i class=\"fa-solid fa-k\"></i>&nbsp;Login with Kakao\r\n                    </a>\r\n                  </form>\r\n                  <hr />\r\n                  <div class=\"text-center\">\r\n                    <a class=\"small\" href=\"/forgot-password\">\r\n                      Forgot Password?\r\n                    </a>\r\n                  </div>\r\n                  <div class=\"text-center\">\r\n                    <a class=\"small\" href=\"/register\"> Create an Account! </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n// TODO: 1) spring 보내준 user 객체(웹토큰있음)를 로컬스토리지에 저장\r\n// TODO:   사용법 :  localStorage.setItem(키, 값);\r\n// TODO:     => 단, 값은 문자열만 저장됨\r\n// TODO:   사용법 : JSON.stringify(객체) => 문자열로 바뀐 객체가 리턴됨\r\n\r\n// TODO: 2) 공유저장소의 state / mutations 함수 접근법\r\n// TODO:   mutations 사용법 : this.$store.commit(\"함수명\", 저장할객체)\r\n// TODO:     => 로그인성공 공유함수(loginSuccess(state, 유저객체)) 실행\r\n// TODO:   state 사용법 : this.$store.state.공유속성명\r\n// TODO:     => 공유저장소의 공유속성 접근법\r\n\r\n// TODO: 3) 뷰의 라이프사이클\r\n// TODO:   - mounted() : 화면이 뜰때 자동 실행 (생명주기 함수)\r\n// TODO:   - created() : 뷰가 생성될대 자동 실행\r\n// TODO:   - created()(1번, 뷰만 생성되면 실행) -> mounted()(2번, html 태그까지 모두 뜰때)\r\n// TODO:     예) destoryed() : 뷰가 삭제될때 실행 (거의 사용 않함)\r\n\r\nimport AuthService from \"@/services/auth/AuthService\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      user: {\r\n        email: \"\", // 로그인ID\r\n        password: \"\",\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    async login() {\r\n      try {\r\n        let response = await AuthService.login(this.user);\r\n        console.log(response.data);\r\n\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data)); // 1)\r\n\r\n        this.$store.commit(\"loginSuccess\", response.data); // 2)\r\n\r\n        this.$router.push(\"/\");\r\n      } catch (e) {\r\n        this.$store.commit(\"loginFailure\");\r\n\r\n        console.log(e);\r\n      }\r\n    },\r\n  },\r\n  // 화면이 뜰때 실행되는 함수\r\n  created() {\r\n    if (this.$store.state.loggedIn == true) {\r\n      // 로그인 상태이면 로그인 불필요\r\n      this.$router.push(\"/\");\r\n    }\r\n  },\r\n};\r\n</script>\r\n<style>\r\n@import \"@/assets/css/login.css\";\r\n</style>\r\n"],"mappings":";;EAKSA,KAAK,EAAC;AAA4B;;EAChCA,KAAK,EAAC;AAA8B;;EAClCA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAe;;EAEnBA,KAAK,EAAC;AAAK;gCACdC,mBAAA,CAA2C;EAAtCD,KAAK,EAAC;AAAyB;;EAC/BA,KAAK,EAAC;AAAU;;EACdA,KAAK,EAAC;AAAK;gCACdC,mBAAA,CAEM;EAFDD,KAAK,EAAC;AAAa,I,aACtBC,mBAAA,CAAsC;EAAlCD,KAAK,EAAC;AAAS,GAAC,eAAa,E;;EAG5BA,KAAK,EAAC;AAAY;;EASlBA,KAAK,EAAC;AAAY;iCA3B3CE,kBAAA;iCAsDkBD,mBAAA,CAAM;iCACNA,mBAAA,CAIM;EAJDD,KAAK,EAAC;AAAa,I,aACtBC,mBAAA,CAEI;EAFDD,KAAK,EAAC,OAAO;EAACG,IAAI,EAAC;GAAmB,oBAEzC,E;iCAEFF,mBAAA,CAEM;EAFDD,KAAK,EAAC;AAAa,I,aACtBC,mBAAA,CAA0D;EAAvDD,KAAK,EAAC,OAAO;EAACG,IAAI,EAAC;GAAY,sBAAoB,E;;uBAzDxEC,mBAAA,CAkEM,cAjEJH,mBAAA,CAgEM,OAhENI,UAgEM,GA/DJJ,mBAAA,CA8DM,OA9DNK,UA8DM,GA7DJL,mBAAA,CA4DM,OA5DNM,UA4DM,GA3DJN,mBAAA,CA0DM,OA1DNO,UA0DM,GAzDJC,mBAAA,yCAA4C,EAC5CR,mBAAA,CAuDM,OAvDNS,UAuDM,GAtDJC,UAA2C,EAC3CV,mBAAA,CAoDM,OApDNW,UAoDM,GAnDJX,mBAAA,CAkDM,OAlDNY,UAkDM,GAjDJC,UAEM,EACNb,mBAAA,CAoCO;IApCDD,KAAK,EAAC,MAAM;IAAEe,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAjB5CC,cAAA,KAAAC,IAAA,KAiBsDC,QAAA,CAAAC,KAAA,IAAAD,QAAA,CAAAC,KAAA,IAAAF,IAAA,CAAK;MACvCjB,mBAAA,CAQM,OARNoB,WAQM,G,gBAPJpB,mBAAA,CAME;IALAqB,IAAI,EAAC,OAAO;IACZtB,KAAK,EAAC,qCAAqC;IAC3CuB,WAAW,EAAC,SAAS;IACrBC,IAAI,EAAC,OAAO;IAvBpC,uBAAAR,MAAA,QAAAA,MAAA,MAAAS,MAAA,IAwBiCC,KAAA,CAAAC,IAAI,CAACC,KAAK,GAAAH,MAAA;iDAAVC,KAAA,CAAAC,IAAI,CAACC,KAAK,E,KAGvB3B,mBAAA,CAQM,OARN4B,WAQM,G,gBAPJ5B,mBAAA,CAME;IALAqB,IAAI,EAAC,UAAU;IACftB,KAAK,EAAC,qCAAqC;IAC3CuB,WAAW,EAAC,SAAS;IACrBC,IAAI,EAAC,UAAU;IAhCvC,uBAAAR,MAAA,QAAAA,MAAA,MAAAS,MAAA,IAiCiCC,KAAA,CAAAC,IAAI,CAACG,QAAQ,GAAAL,MAAA;iDAAbC,KAAA,CAAAC,IAAI,CAACG,QAAQ,E,KAI1BC,WAES,C,4BAeXC,WAAM,EACNC,WAIM,EACNC,WAEM,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}