{"ast":null,"code":"// TODO: vuex : 공유속성, 공유함수 등을 정의, 공유저장소\n// TODO:   => 모든 컴포넌트가 사용가능\n\n// TODO: 역할\n// TODO:   1) 로컬스토리지에서 최초 생성될때 로컬스토리지에서 user 객체 가져옴\n// TODO:   2) 유저 객체를 공유하고 로그인 성공여부 속성을 관리함\n\n// TODO: 공유저장소 구조\n// TODO:  1) state     : 공유 속성 정의\n// TODO:  2) mutations : 속성 변경 함수 정의, setter 함수 역할\n// TODO:  3) actions   : 비동기 함수 정의하는 부분\n\nimport { createStore } from \"vuex\";\nconst user = JSON.parse(localStorage.getItem(\"user\"));\nexport default createStore({\n  state: {\n    loggedIn: user ? true : false,\n    // 로그인 여부 속성\n    user: user ? user : null\n  },\n  mutations: {\n    // 로그인 성공\n    loginSuccess(state, user) {\n      state.loggedIn = true;\n      state.user = user;\n    },\n    // 로그인 실패\n    loginFailure(state) {\n      state.loggedIn = false;\n      state.user = null;\n    },\n    // 로그아웃\n    logout(state) {\n      state.loggedIn = false;\n      state.user = null;\n    },\n    // 회원가입 성공\n    registerSuccess(state) {\n      state.loggedIn = false;\n    },\n    // 회원가입 실패 \n    registerFailure(state) {\n      state.loggedIn = false;\n    }\n  },\n  actions: {}\n});","map":{"version":3,"names":["createStore","user","JSON","parse","localStorage","getItem","state","loggedIn","mutations","loginSuccess","loginFailure","logout","registerSuccess","registerFailure","actions"],"sources":["/Users/kangtaegyung/GitHub/social-login-multiple-providers/frontend-vue/src/store/index.js"],"sourcesContent":["// TODO: vuex : 공유속성, 공유함수 등을 정의, 공유저장소\n// TODO:   => 모든 컴포넌트가 사용가능\n\n// TODO: 역할\n// TODO:   1) 로컬스토리지에서 최초 생성될때 로컬스토리지에서 user 객체 가져옴\n// TODO:   2) 유저 객체를 공유하고 로그인 성공여부 속성을 관리함\n\n// TODO: 공유저장소 구조\n// TODO:  1) state     : 공유 속성 정의\n// TODO:  2) mutations : 속성 변경 함수 정의, setter 함수 역할\n// TODO:  3) actions   : 비동기 함수 정의하는 부분\n\nimport { createStore } from \"vuex\";\n\nconst user = JSON.parse(localStorage.getItem(\"user\"));\n\nexport default createStore({\n  state: {\n    loggedIn: user ? true : false, // 로그인 여부 속성\n    user: user ? user : null,      \n  },\n  mutations: {\n    // 로그인 성공\n    loginSuccess(state, user) {\n      state.loggedIn = true;\n      state.user = user;\n    },\n    // 로그인 실패\n    loginFailure(state) {\n      state.loggedIn = false;\n      state.user = null;\n    },\n    // 로그아웃\n    logout(state) {\n      state.loggedIn = false;\n      state.user = null;\n    },\n    // 회원가입 성공\n    registerSuccess(state) {\n      state.loggedIn = false;\n    },\n    // 회원가입 실패 \n    registerFailure(state) {\n      state.loggedIn = false;\n    },\n  },\n  actions: {},\n});\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAASA,WAAW,QAAQ,MAAM;AAElC,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;AAErD,eAAeL,WAAW,CAAC;EACzBM,KAAK,EAAE;IACLC,QAAQ,EAAEN,IAAI,GAAG,IAAI,GAAG,KAAK;IAAE;IAC/BA,IAAI,EAAEA,IAAI,GAAGA,IAAI,GAAG;EACtB,CAAC;EACDO,SAAS,EAAE;IACT;IACAC,YAAYA,CAACH,KAAK,EAAEL,IAAI,EAAE;MACxBK,KAAK,CAACC,QAAQ,GAAG,IAAI;MACrBD,KAAK,CAACL,IAAI,GAAGA,IAAI;IACnB,CAAC;IACD;IACAS,YAAYA,CAACJ,KAAK,EAAE;MAClBA,KAAK,CAACC,QAAQ,GAAG,KAAK;MACtBD,KAAK,CAACL,IAAI,GAAG,IAAI;IACnB,CAAC;IACD;IACAU,MAAMA,CAACL,KAAK,EAAE;MACZA,KAAK,CAACC,QAAQ,GAAG,KAAK;MACtBD,KAAK,CAACL,IAAI,GAAG,IAAI;IACnB,CAAC;IACD;IACAW,eAAeA,CAACN,KAAK,EAAE;MACrBA,KAAK,CAACC,QAAQ,GAAG,KAAK;IACxB,CAAC;IACD;IACAM,eAAeA,CAACP,KAAK,EAAE;MACrBA,KAAK,CAACC,QAAQ,GAAG,KAAK;IACxB;EACF,CAAC;EACDO,OAAO,EAAE,CAAC;AACZ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}