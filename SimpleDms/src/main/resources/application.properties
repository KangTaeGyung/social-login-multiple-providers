# \uC11C\uBC84 \uD3EC\uD2B8
server.port=8000

# \uC624\uB77C\uD074 \uB3C4\uCEE4 \uC124\uC815
spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
spring.datasource.url=jdbc:log4jdbc:oracle:thin:@localhost:1521/xepdb1
spring.datasource.username=scott
spring.datasource.password=!Ds1234567890

# JPA \uC811\uC18D \uC124\uC815
spring.jpa.hibernate.ddl-auto=none
spring.jpa.database-platform=org.hibernate.dialect.Oracle12cDialect
spring.jpa.properties.hibernate.default_batch_fetch_size=1000

# \uC5C5\uB85C\uB4DC \uD30C\uC77C \uC0AC\uC774\uC988 \uC81C\uD55C \uC124\uC815 : \uAE30\uBCF8(1MB \uAE4C\uC9C0)
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# \uC790\uBC14 \uC18C\uC2A4\uAC00 \uC218\uC815\uB418\uBA74 \uC11C\uBC84 \uC790\uB3D9 \uC7AC\uC2DC\uC791\uC744 \uD568
spring.devtools.restart.enabled=true

# \uC6F9\uD1A0\uD070(JWT) \uC124\uC815 : \uBE44\uBC00\uD0A4, \uB9CC\uB8CC\uC2DC\uAC04(10\uBD84)
# openssl rand -hex 64 : git bash \uB610\uB294 \uB9AC\uB205\uC2A4\uC5D0\uC11C \uC2E4\uD589\uD558\uBA74 \uB79C\uB364\uD55C 64 byte \uBE44\uBC00\uD0A4 \uC0DD\uC131\uB428
# \uB9CC\uB8CC\uC2DC\uAC04 : 10\uBD84 == 600000
simpleDms.app.jwtSecret=bd1889daea6ad98b6e099034b0544974a17bab50c2872e3916c6c7d7762ce80fe9bc0a72ea5d62e65eb7e2396d6dcd1fb90937c7ead79adce142c8383de20776
simpleDms.app.jwtExpirationMs= 600000

# Naver simple login setting
spring.security.oauth2.client.registration.naver.clientId=\uD074\uB77C\uC774\uC5B8\uD2B8ID
spring.security.oauth2.client.registration.naver.clientSecret=\uC2DC\uD06C\uB9BFID
spring.security.oauth2.client.registration.naver.redirect_uri={baseUrl}/{action}/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.naver.scope=email, profile
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.client-name=Naver

# Naver provider register
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# Google simple login setting
spring.security.oauth2.client.registration.google.clientId=\uD074\uB77C\uC774\uC5B8\uD2B8ID
spring.security.oauth2.client.registration.google.clientSecret=\uC2DC\uD06C\uB9BFID
spring.security.oauth2.client.registration.google.scope=email, profile

# frontend \uC8FC\uC18C
simpleDms.app.front-url=http://localhost:8080

# resource/schema.sql, data.sql \uC790\uB3D9 \uC2E4\uD589 ( DML \uC2E4\uD589 )
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always
spring.sql.init.continue-on-error=true